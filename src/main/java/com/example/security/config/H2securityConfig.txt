//package com.example.security.config;
//import com.example.security.security.JwtAuthFilter;
//import com.example.security.service.UserService;
//import lombok.RequiredArgsConstructor;
//import org.springframework.boot.autoconfigure.security.servlet.PathRequest;
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.config.Customizer;
//import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
//import org.springframework.security.config.annotation.web.builders.HttpSecurity;
//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
//import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;
//import org.springframework.security.config.http.SessionCreationPolicy;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
//import org.springframework.security.crypto.password.PasswordEncoder;
//import org.springframework.security.web.SecurityFilterChain;
//import org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher;
//import org.springframework.web.servlet.handler.HandlerMappingIntrospector;
//
//@Configuration
//@EnableWebSecurity
//@EnableMethodSecurity
//@RequiredArgsConstructor
//public class H2securityConfig {
//    private final JwtAuthFilter jwtAuthFilter;
//    private final UserService userDetailsService;
//
//
//    @Bean
//    public PasswordEncoder passwordEncoder() {
//        return new BCryptPasswordEncoder();
//    }
//
//    @Bean
//    public SecurityFilterChain securityFilterChain(HttpSecurity http, HandlerMappingIntrospector introspector) throws Exception {
//        MvcRequestMatcher.Builder mvc=new MvcRequestMatcher.Builder(introspector);
//        http
//                .headers(x->x.frameOptions(HeadersConfigurer.FrameOptionsConfig::disable))
//                .csrf(config->config.ignoringRequestMatchers(mvc.pattern("/public/**"))
//                        .ignoringRequestMatchers(PathRequest.toH2Console()))
//                .authorizeHttpRequests(x->
//                        x.requestMatchers(mvc.pattern("/public/**")).permitAll()
//                                .requestMatchers(mvc.pattern("/private/admin/**")).hasRole("ADMIN")
//                                .requestMatchers(mvc.pattern("/private/**")).hasAnyRole("USER","ADMIN")
//                                .requestMatchers(PathRequest.toH2Console()).hasRole("ADMIN")
//                                .anyRequest().authenticated())
//                .formLogin(Customizer.withDefaults())
//                .httpBasic(Customizer.withDefaults())
//                .sessionManagement(x->x.sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED));
//        return http.build();
//    }
//


//}
